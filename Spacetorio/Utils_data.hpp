#ifndef UTILS_DATA_H_
#define UTILS_DATA_H_


#include "glm/glm.hpp"

#include <cmath>
#include <map>
#include <utility>

#define CHUNK_SIZE 16 //Tiles
#define TILE_SIZE 32 //WorldCoordinates


inline int roundTo(int n, int group){
    return floor(n/group)*group;
}

inline int roundChunk(int n){
    return floor(n/CHUNK_SIZE)*CHUNK_SIZE;
}


enum PlanetBiomeType { BIOME_FLATS, BIOME_MOUNTAIN, BIOME_LAKE };



struct TileRenderData{
    glm::vec2 pos = {0.0f,0.0f};
    glm::vec2 spriteOffset = {0.0f,0.0f};
    int spriteIndex = 0;
};

struct SpriteRenderData{
    glm::vec2 pos = {0.0f,0.0f};
    int spriteIndex = 0;
    glm::vec2 size = {0.0f, 0.0f};
};

struct LineRenderData{
    glm::vec2 p1 = {0.0f,0.0f};
    glm::vec2 p2 = {0.0f,0.0f};
    glm::vec3 col = {0.0f,0.0f,0.0f};
};




/*
    Ref: http://www.cr31.co.uk/stagecast/wang/blob.html

   0     1     2     3     4     5     6
  +-----+-----+-----+-----+-----+-----+-----+
 0|  0  |  4  |  84 |  92 | 124 | 116 |  80 |
  +-----+-----+-----+-----+-----+-----+-----+
 1|  16 |  28 | 117 |  95 | 255 | 253 | 113 |
  +-----+-----+-----+-----+-----+-----+-----+
 2|  21 |  87 | 221 | 127 | 255 | 247 | 209 |
  +-----+-----+-----+-----+-----+-----+-----+
 3|  29 | 125 | 119 | 199 | 215 | 213 |  81 |
  +-----+-----+-----+-----+-----+-----+-----+
 4|  31 | 255 | 241 |  20 |  65 |  17 |  1  |
  +-----+-----+-----+-----+-----+-----+-----+
 5|  23 | 223 | 245 |  85 |  68 |  93 | 112 |
  +-----+-----+-----+-----+-----+-----+-----+
 6|  5  |  71 | 197 |  69 |  64 |  7  | 193 |
  +-----+-----+-----+-----+-----+-----+-----+
*/

static std::map<int, std::pair<float, float>> tileValueToOffset = {
    {0, {0.0f, 0.0f}},   {1, {6.0f, 4.0f}},   {4, {1.0f, 0.0f}},
    {5, {0.0f, 6.0f}},   {7, {5.0f, 6.0f}},   {16, {0.0f, 1.0f}},
    {17, {5.0f, 4.0f}},  {20, {3.0f, 4.0f}},  {21, {0.0f, 2.0f}},
    {23, {0.0f, 5.0f}},  {28, {1.0f, 1.0f}},  {29, {0.0f, 3.0f}},
    {31, {0.0f, 4.0f}},  {64, {4.0f, 6.0f}},  {65, {4.0f, 4.0f}},
    {68, {4.0f, 5.0f}},  {69, {3.0f, 6.0f}},  {71, {1.0f, 6.0f}},
    {80, {6.0f, 0.0f}},  {81, {6.0f, 3.0f}},  {84, {2.0f, 0.0f}},
    {85, {3.0f, 5.0f}},  {87, {1.0f, 2.0f}},  {92, {3.0f, 0.0f}},
    {93, {5.0f, 5.0f}},  {95, {3.0f, 1.0f}},  {112, {6.0f, 5.0f}},
    {113, {6.0f, 1.0f}}, {116, {5.0f, 0.0f}}, {117, {2.0f, 1.0f}},
    {119, {2.0f, 3.0f}}, {124, {4.0f, 0.0f}}, {125, {1.0f, 3.0f}},
    {127, {3.0f, 2.0f}}, {193, {6.0f, 6.0f}}, {197, {2.0f, 6.0f}},
    {199, {3.0f, 3.0f}}, {209, {6.0f, 2.0f}}, {213, {5.0f, 3.0f}},
    {215, {4.0f, 3.0f}}, {221, {2.0f, 2.0f}}, {223, {1.0f, 5.0f}},
    {241, {2.0f, 4.0f}}, {245, {2.0f, 5.0f}}, {247, {5.0f, 2.0f}},
    {253, {5.0f, 1.0f}}, {255, {1.0f, 4.0f}},
};

static std::map<int, int> tileValueRemapping = {
    {0, 0},     {1, 1},     {2, 0},     {3, 1},     {4, 4},     {5, 5},
    {6, 4},     {7, 7},     {8, 0},     {9, 1},     {10, 0},    {11, 1},
    {12, 4},    {13, 5},    {14, 4},    {15, 7},    {16, 16},   {17, 17},
    {18, 16},   {19, 17},   {20, 20},   {21, 21},   {22, 20},   {23, 23},
    {24, 16},   {25, 17},   {26, 16},   {27, 17},   {28, 28},   {29, 29},
    {30, 28},   {31, 31},   {32, 0},    {33, 1},    {34, 0},    {35, 1},
    {36, 4},    {37, 5},    {38, 4},    {39, 7},    {40, 0},    {41, 1},
    {42, 0},    {43, 1},    {44, 4},    {45, 5},    {46, 4},    {47, 7},
    {48, 16},   {49, 17},   {50, 16},   {51, 17},   {52, 20},   {53, 21},
    {54, 20},   {55, 23},   {56, 16},   {57, 17},   {58, 16},   {59, 17},
    {60, 28},   {61, 29},   {62, 28},   {63, 31},   {64, 64},   {65, 65},
    {66, 64},   {67, 65},   {68, 68},   {69, 69},   {70, 68},   {71, 71},
    {72, 64},   {73, 65},   {74, 64},   {75, 65},   {76, 68},   {77, 69},
    {78, 68},   {79, 71},   {80, 80},   {81, 81},   {82, 80},   {83, 81},
    {84, 84},   {85, 85},   {86, 84},   {87, 87},   {88, 80},   {89, 81},
    {90, 80},   {91, 81},   {92, 92},   {93, 93},   {94, 92},   {95, 95},
    {96, 64},   {97, 65},   {98, 64},   {99, 65},   {100, 68},  {101, 69},
    {102, 68},  {103, 71},  {104, 64},  {105, 65},  {106, 64},  {107, 65},
    {108, 68},  {109, 69},  {110, 68},  {111, 71},  {112, 112}, {113, 113},
    {114, 112}, {115, 113}, {116, 116}, {117, 117}, {118, 116}, {119, 119},
    {120, 112}, {121, 113}, {122, 112}, {123, 113}, {124, 124}, {125, 125},
    {126, 124}, {127, 127}, {128, 0},   {129, 1},   {130, 0},   {131, 1},
    {132, 4},   {133, 5},   {134, 4},   {135, 7},   {136, 0},   {137, 1},
    {138, 0},   {139, 1},   {140, 4},   {141, 5},   {142, 4},   {143, 7},
    {144, 16},  {145, 17},  {146, 16},  {147, 17},  {148, 20},  {149, 21},
    {150, 20},  {151, 23},  {152, 16},  {153, 17},  {154, 16},  {155, 17},
    {156, 28},  {157, 29},  {158, 28},  {159, 31},  {160, 0},   {161, 1},
    {162, 0},   {163, 1},   {164, 4},   {165, 5},   {166, 4},   {167, 7},
    {168, 0},   {169, 1},   {170, 0},   {171, 1},   {172, 4},   {173, 5},
    {174, 4},   {175, 7},   {176, 16},  {177, 17},  {178, 16},  {179, 17},
    {180, 20},  {181, 21},  {182, 20},  {183, 23},  {184, 16},  {185, 17},
    {186, 16},  {187, 17},  {188, 28},  {189, 29},  {190, 28},  {191, 31},
    {192, 64},  {193, 193}, {194, 64},  {195, 193}, {196, 68},  {197, 197},
    {198, 68},  {199, 199}, {200, 64},  {201, 193}, {202, 64},  {203, 193},
    {204, 68},  {205, 197}, {206, 68},  {207, 199}, {208, 80},  {209, 209},
    {210, 80},  {211, 209}, {212, 84},  {213, 213}, {214, 84},  {215, 215},
    {216, 80},  {217, 209}, {218, 80},  {219, 209}, {220, 92},  {221, 221},
    {222, 92},  {223, 223}, {224, 64},  {225, 193}, {226, 64},  {227, 193},
    {228, 68},  {229, 197}, {230, 68},  {231, 199}, {232, 64},  {233, 193},
    {234, 64},  {235, 193}, {236, 68},  {237, 197}, {238, 68},  {239, 199},
    {240, 112}, {241, 241}, {242, 112}, {243, 241}, {244, 116}, {245, 245},
    {246, 116}, {247, 247}, {248, 112}, {249, 241}, {250, 112}, {251, 241},
    {252, 124}, {253, 253}, {254, 124}, {255, 255},

};

inline void getSpriteOffsetFromTileSurroundingValue(int tileValue, float* offx, float* offy){
    int remapped = (tileValueRemapping.count(tileValue)) ? tileValueRemapping[tileValue] : 0;
    if (remapped > 9999){ remapped = 0;}

    if (tileValueToOffset.count(remapped)){
        auto& pair = tileValueToOffset[remapped];
        *offx = pair.first;
        *offy = pair.second;
    }else{
        *offx = 0.0f;
        *offy = 0.0f;
    }
}


#endif // UTILS_DATA_H_
