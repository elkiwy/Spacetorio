#ifndef UTILS_DATA_H_
#define UTILS_DATA_H_


#include "glm/glm.hpp"

#include <cmath>
#include <map>
#include <utility>

#define CHUNK_SIZE 16 //Tiles
#define TILE_SIZE 32 //WorldCoordinates


inline int roundTo(int n, int group){
    return floor(n/group)*group;
}

inline int roundChunk(int n){
    return floor(n/CHUNK_SIZE)*CHUNK_SIZE;
}


enum PlanetBiomeType { BIOME_FLATS, BIOME_MOUNTAIN, BIOME_LAKE };



struct TileRenderData{
    glm::vec2 pos = {0.0f,0.0f};
    glm::vec2 spriteOffset = {0.0f,0.0f};
    int spriteIndex = 0;
};

struct SpriteRenderData{
    glm::vec2 pos = {0.0f,0.0f};
    int spriteIndex = 0;
    glm::vec2 size = {0.0f, 0.0f};
};

struct LineRenderData{
    glm::vec2 p1 = {0.0f,0.0f};
    glm::vec2 p2 = {0.0f,0.0f};
    glm::vec3 col = {0.0f,0.0f,0.0f};
};




/*
    Ref: http://www.cr31.co.uk/stagecast/wang/blob.html

   0     1     2     3     4     5     6
  +-----+-----+-----+-----+-----+-----+-----+
 0|  0  |  4  |  84 |  92 | 124 | 116 |  80 |
  +-----+-----+-----+-----+-----+-----+-----+
 1|  16 |  28 | 117 |  95 | 255 | 253 | 113 |
  +-----+-----+-----+-----+-----+-----+-----+
 2|  21 |  87 | 221 | 127 | 255 | 247 | 209 |
  +-----+-----+-----+-----+-----+-----+-----+
 3|  29 | 125 | 119 | 199 | 215 | 213 |  81 |
  +-----+-----+-----+-----+-----+-----+-----+
 4|  31 | 255 | 241 |  20 |  65 |  17 |  1  |
  +-----+-----+-----+-----+-----+-----+-----+
 5|  23 | 223 | 245 |  85 |  68 |  93 | 112 |
  +-----+-----+-----+-----+-----+-----+-----+
 6|  5  |  71 | 197 |  69 |  64 |  7  | 193 |
  +-----+-----+-----+-----+-----+-----+-----+
*/

static std::map<int, std::pair<float, float>> tileValueToOffset = {
    {0, {0.0f, 0.0f}},   {1, {6.0f, 4.0f}},   {4, {1.0f, 0.0f}},
    {5, {0.0f, 6.0f}},   {7, {5.0f, 6.0f}},   {16, {0.0f, 1.0f}},
    {17, {5.0f, 4.0f}},  {20, {3.0f, 4.0f}},  {21, {0.0f, 2.0f}},
    {23, {0.0f, 5.0f}},  {28, {1.0f, 1.0f}},  {29, {0.0f, 3.0f}},
    {31, {0.0f, 4.0f}},  {64, {4.0f, 6.0f}},  {65, {4.0f, 4.0f}},
    {68, {4.0f, 5.0f}},  {69, {3.0f, 6.0f}},  {71, {1.0f, 6.0f}},
    {80, {6.0f, 0.0f}},  {81, {6.0f, 3.0f}},  {84, {2.0f, 0.0f}},
    {85, {3.0f, 5.0f}},  {87, {1.0f, 2.0f}},  {92, {3.0f, 0.0f}},
    {93, {5.0f, 5.0f}},  {95, {3.0f, 1.0f}},  {112, {6.0f, 5.0f}},
    {113, {6.0f, 1.0f}}, {116, {5.0f, 0.0f}}, {117, {2.0f, 1.0f}},
    {119, {2.0f, 3.0f}}, {124, {4.0f, 0.0f}}, {125, {1.0f, 3.0f}},
    {127, {3.0f, 2.0f}}, {193, {6.0f, 6.0f}}, {197, {2.0f, 6.0f}},
    {199, {3.0f, 3.0f}}, {209, {6.0f, 2.0f}}, {213, {5.0f, 3.0f}},
    {215, {4.0f, 3.0f}}, {221, {2.0f, 2.0f}}, {223, {1.0f, 5.0f}},
    {241, {2.0f, 4.0f}}, {245, {2.0f, 5.0f}}, {247, {5.0f, 2.0f}},
    {253, {5.0f, 1.0f}}, {255, {1.0f, 4.0f}},
};


static std::map<int, int> tileValueRemapping = {

//{0,0},{1,1},{2,999999},{3,1},{4,4},{5,5},{6,4},{7,7},{8,0},{9,999999},{10,999999},{11,999999},{12,999999},{13,999999},{14,999999},{15,999999},{16,16},{17,17},{18,999999},{19,999999},{20,20},{21,21},{22,999999},{23,23},{24,16},{25,999999},{26,999999},{27,999999},{28,28},{29,29},{30,999999},{31,31},{32,999999},{33,33},{34,0},{35,999999},{36,999999},{37,999999},{38,999999},{39,999999},{40,999999},{41,999999},{42,999999},{43,999999},{44,999999},{45,999999},{46,999999},{47,47},{48,999999},{49,17},{50,16},{51,999999},{52,999999},{53,999999},{54,999999},{55,999999},{56,16},{57,999999},{58,999999},{59,999999},{60,28},{61,999999},{62,999999},{63,999999},{64,64},{65,65},{66,999999},{67,999999},{68,68},{69,69},{70,999999},{71,71},{72,999999},{73,999999},{74,999999},{75,999999},{76,999999},{77,999999},{78,999999},{79,999999},{80,80},{81,81},{82,999999},{83,999999},{84,84},{85,85},{86,999999},{87,87},{88,999999},{89,999999},{90,999999},{91,999999},{92,92},{93,93},{94,999999},{95,95},{96,999999},{97,999999},{98,999999},{99,999999},{100,999999},{101,999999},{102,68},{103,999999},{104,999999},{105,999999},{106,999999},{107,999999},{108,999999},{109,999999},{110,999999},{111,999999},{112,112},{113,113},{114,999999},{115,999999},{116,116},{117,117},{118,999999},{119,119},{120,999999},{121,999999},{122,999999},{123,999999},{124,124},{125,125},{126,999999},{127,127},{128,999999},{129,1},{130,999999},{131,999999},{132,999999},{133,999999},{134,999999},{135,999999},{136,999999},{137,1},{138,999999},{139,999999},{140,999999},{141,999999},{142,999999},{143,999999},{144,144},{145,999999},{146,146},{147,17},{148,999999},{149,999999},{150,999999},{151,999999},{152,152},{153,999999},{154,999999},{155,999999},{156,999999},{157,999999},{158,999999},{159,999999},{160,999999},{161,999999},{162,999999},{163,999999},{164,999999},{165,999999},{166,999999},{167,999999},{168,999999},{169,1},{170,999999},{171,1},{172,999999},{173,999999},{174,999999},{175,999999},{176,999999},{177,999999},{178,999999},{179,999999},{180,999999},{181,21},{182,999999},{183,999999},{184,999999},{185,999999},{186,16},{187,999999},{188,999999},{189,999999},{190,999999},{191,999999},{192,999999},{193,193},{194,999999},{195,999999},{196,999999},{197,197},{198,999999},{199,199},{200,999999},{201,999999},{202,999999},{203,999999},{204,999999},{205,999999},{206,999999},{207,999999},{208,999999},{209,209},{210,999999},{211,999999},{212,999999},{213,213},{214,999999},{215,215},{216,80},{217,999999},{218,999999},{219,999999},{220,999999},{221,221},{222,999999},{223,223},{224,999999},{225,193},{226,999999},{227,999999},{228,999999},{229,999999},{230,999999},{231,999999},{232,999999},{233,999999},{234,999999},{235,999999},{236,999999},{237,999999},{238,68},{239,199},{240,999999},{241,241},{242,112},{243,241},{244,999999},{245,245},{246,999999},{247,247},{248,112},{249,241},{250,112},{251,241},{252,999999},{253,253},{254,124},{255,255},


//{0,0},{1,1},{2,0},{3,1},{4,4},{5,5},{6,4},{7,7},{8,0},{9,1},{10,999999},{11,999999},{12,4},{13,999999},{14,999999},{15,999999},{16,16},{17,17},{18,16},{19,17},{20,20},{21,21},{22,999999},{23,23},{24,16},{25,17},{26,999999},{27,999999},{28,28},{29,29},{30,999999},{31,31},{32,999999},{33,33},{34,0},{35,999999},{36,999999},{37,999999},{38,999999},{39,999999},{40,999999},{41,1},{42,999999},{43,999999},{44,999999},{45,999999},{46,999999},{47,47},{48,16},{49,17},{50,16},{51,17},{52,999999},{53,999999},{54,999999},{55,23},{56,16},{57,999999},{58,999999},{59,17},{60,28},{61,999999},{62,999999},{63,999999},{64,64},{65,65},{66,64},{67,999999},{68,68},{69,69},{70,68},{71,71},{72,999999},{73,999999},{74,999999},{75,65},{76,999999},{77,999999},{78,999999},{79,999999},{80,80},{81,81},{82,999999},{83,999999},{84,84},{85,85},{86,999999},{87,87},{88,999999},{89,999999},{90,999999},{91,999999},{92,92},{93,93},{94,999999},{95,95},{96,999999},{97,999999},{98,999999},{99,999999},{100,68},{101,999999},{102,68},{103,999999},{104,999999},{105,999999},{106,64},{107,999999},{108,999999},{109,999999},{110,999999},{111,999999},{112,112},{113,113},{114,999999},{115,999999},{116,116},{117,117},{118,999999},{119,119},{120,999999},{121,119},{122,999999},{123,999999},{124,124},{125,125},{126,124},{127,127},{128,999999},{129,1},{130,999999},{131,1},{132,999999},{133,999999},{134,999999},{135,7},{136,0},{137,1},{138,999999},{139,999999},{140,4},{141,999999},{142,4},{143,999999},{144,16},{145,17},{146,16},{147,17},{148,999999},{149,21},{150,999999},{151,999999},{152,152},{153,17},{154,999999},{155,999999},{156,999999},{157,29},{158,28},{159,31},{160,999999},{161,1},{162,999999},{163,999999},{164,4},{165,999999},{166,999999},{167,999999},{168,0},{169,1},{170,999999},{171,1},{172,999999},{173,999999},{174,999999},{175,999999},{176,999999},{177,17},{178,999999},{179,999999},{180,999999},{181,21},{182,999999},{183,999999},{184,16},{185,999999},{186,16},{187,17},{188,999999},{189,999999},{190,999999},{191,999999},{192,64},{193,193},{194,999999},{195,999999},{196,68},{197,197},{198,68},{199,199},{200,999999},{201,999999},{202,999999},{203,999999},{204,68},{205,999999},{206,68},{207,999999},{208,999999},{209,209},{210,999999},{211,209},{212,999999},{213,213},{214,999999},{215,215},{216,80},{217,999999},{218,999999},{219,999999},{220,999999},{221,221},{222,999999},{223,223},{224,999999},{225,193},{226,64},{227,999999},{228,999999},{229,999999},{230,999999},{231,999999},{232,64},{233,999999},{234,64},{235,999999},{236,68},{237,999999},{238,68},{239,199},{240,999999},{241,241},{242,112},{243,241},{244,999999},{245,245},{246,999999},{247,247},{248,112},{249,241},{250,112},{251,241},{252,999999},{253,253},{254,124},{255,255},

{0,0},{1,1},{2,0},{3,1},{4,4},{5,5},{6,4},{7,7},{8,0},{9,1},{10,999999},{11,1},{12,4},{13,999999},{14,4},{15,7},{16,16},{17,17},{18,16},{19,17},{20,20},{21,21},{22,20},{23,23},{24,16},{25,17},{26,999999},{27,999999},{28,28},{29,29},{30,28},{31,31},{32,0},{33,1},{34,0},{35,1},{36,999999},{37,5},{38,4},{39,7},{40,999999},{41,1},{42,0},{43,1},{44,4},{45,999999},{46,999999},{47,7},{48,16},{49,17},{50,16},{51,17},{52,20},{53,21},{54,20},{55,23},{56,16},{57,17},{58,999999},{59,17},{60,28},{61,999999},{62,28},{63,31},{64,64},{65,65},{66,64},{67,65},{68,68},{69,69},{70,68},{71,71},{72,64},{73,65},{74,64},{75,65},{76,68},{77,999999},{78,68},{79,71},{80,80},{81,81},{82,16},{83,81},{84,84},{85,85},{86,999999},{87,87},{88,80},{89,81},{90,80},{91,81},{92,92},{93,93},{94,92},{95,95},{96,64},{97,65},{98,64},{99,999999},{100,68},{101,69},{102,68},{103,999999},{104,64},{105,65},{106,64},{107,65},{108,68},{109,999999},{110,68},{111,71},{112,112},{113,113},{114,112},{115,999999},{116,116},{117,117},{118,116},{119,119},{120,112},{121,119},{122,112},{123,113},{124,124},{125,125},{126,124},{127,127},{128,999999},{129,1},{130,999999},{131,1},{132,4},{133,5},{134,999999},{135,7},{136,0},{137,1},{138,999999},{139,999999},{140,4},{141,999999},{142,4},{143,7},{144,16},{145,17},{146,16},{147,17},{148,20},{149,21},{150,20},{151,23},{152,16},{153,17},{154,999999},{155,999999},{156,28},{157,29},{158,28},{159,31},{160,0},{161,1},{162,999999},{163,1},{164,4},{165,5},{166,4},{167,999999},{168,0},{169,1},{170,999999},{171,1},{172,999999},{173,5},{174,999999},{175,999999},{176,16},{177,17},{178,16},{179,17},{180,999999},{181,21},{182,20},{183,23},{184,16},{185,999999},{186,16},{187,17},{188,999999},{189,29},{190,999999},{191,31},{192,64},{193,193},{194,64},{195,193},{196,68},{197,197},{198,68},{199,199},{200,64},{201,999999},{202,999999},{203,193},{204,68},{205,999999},{206,68},{207,199},{208,80},{209,209},{210,999999},{211,209},{212,999999},{213,213},{214,84},{215,215},{216,80},{217,999999},{218,80},{219,209},{220,92},{221,221},{222,999999},{223,223},{224,64},{225,193},{226,64},{227,999999},{228,999999},{229,197},{230,999999},{231,199},{232,64},{233,999999},{234,64},{235,193},{236,68},{237,197},{238,68},{239,199},{240,999999},{241,241},{242,112},{243,241},{244,116},{245,245},{246,999999},{247,247},{248,112},{249,241},{250,112},{251,241},{252,124},{253,253},{254,124},{255,255},


};



inline void getSpriteOffsetFromTileSurroundingValue(int tileValue, float* offx, float* offy){
    int remapped = (tileValueRemapping.count(tileValue)) ? tileValueRemapping[tileValue] : 0;
    if (remapped > 9999){ remapped = 0;}

    if (tileValueToOffset.count(remapped)){
        auto& pair = tileValueToOffset[remapped];
        *offx = pair.first;
        *offy = pair.second;
    }else{
        *offx = 0.0f;
        *offy = 0.0f;
    }
}


#endif // UTILS_DATA_H_
